{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/books-manager/book-details/book-details.component.ts","webpack:///src/app/books-manager/book-details/book-details.component.html","webpack:///src/app/books-manager/book/book.component.ts","webpack:///src/app/books-manager/book/book.component.html","webpack:///src/app/books-manager/books-manager.module.ts","webpack:///src/app/books-manager/user-book-details/user-book-details.component.ts","webpack:///src/app/books-manager/user-book-details/user-book-details.component.html","webpack:///src/app/books-manager/user-books/user-books.component.ts","webpack:///src/app/books-manager/user-books/user-books.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/normal-user/normal-user-home/normal-user-home.component.ts","webpack:///src/app/normal-user/normal-user-home/normal-user-home.component.html","webpack:///src/app/normal-user/normal-user-login/normal-user-login.component.ts","webpack:///src/app/normal-user/normal-user-login/normal-user-login.component.html","webpack:///src/app/normal-user/normal-user-sign-up/normal-user-sign-up.component.ts","webpack:///src/app/normal-user/normal-user-sign-up/normal-user-sign-up.component.html","webpack:///src/app/normal-user/normal-user.module.ts","webpack:///src/app/services/auth-guard.service.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/customvalidation.service.ts","webpack:///src/app/services/root.service.ts","webpack:///src/app/services/upload.service.ts","webpack:///src/app/shared-items/header/header.component.ts","webpack:///src/app/shared-items/header/header.component.html","webpack:///src/app/shared-items/shared-items.module.ts","webpack:///src/app/users-manager/login/login.component.ts","webpack:///src/app/users-manager/login/login.component.html","webpack:///src/app/users-manager/logout/logout.component.ts","webpack:///src/app/users-manager/logout/logout.component.html","webpack:///src/app/users-manager/sign-up/sign-up.component.ts","webpack:///src/app/users-manager/sign-up/sign-up.component.html","webpack:///src/app/users-manager/user-home/user-home.component.ts","webpack:///src/app/users-manager/user-home/user-home.component.html","webpack:///src/app/users-manager/users-manager.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","authService","title","loggedIn","isAuthenticated","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BookDetailsComponent","rootService","activatedRoute","imageUrl","bookDetail","params","subscribe","fetchBookdetails","console","log","booksingle","postAPIsingleBook","response","error","booksForm","BookComponent","formBuilder","uploadService","toastr","submitted","updating","enableaddBooks","userId","uploadResponse","status","message","filePath","getBooks","group","required","author","category","blurb","minLength","maxLength","cover","booksOrgForm","window","alert","titleval","value","authorval","catval","blurbval","coverval","newBookItem","filename","replace","fileExt","split","pop","covername","join","formData","FormData","append","get","upload","res","err","orgcoverval","originalData","postAPIUpdateData","success","postAPIData","getAPIData","books","book","bookVal","removeAPIData","scroll","setValue","event","target","files","length","file","controls","BooksManagerModule","totalstar","UserBookDetailsComponent","userdet","localStorage","getItem","data","JSON","parse","$event","newRatingItem","_id","newValue","oldValue","postRatingData","UserBooksComponent","fetchAverageRating","ratingAvg","bookrating","getRatingData","avgRating","avRating","starRating","checkedcolor","uncheckedcolor","HomeComponent","NormalUserHOmeComponent","NormalUserLoginComponent","router","customValidator","loginForm","user","userNameValidator","bind","password","compose","patternValidator","valid","userval","passwordval","userItem","validate","setUserInfo","navigate","login","NormalUserSignUpComponent","userForm","fname","lname","cpassword","validator","MatchPassword","fnameval","lnameval","newUserItem","addUsers","NormalUserModule","AuthGuardService","route","providedIn","AuthService","http","userData","setItem","stringify","post","toPromise","CustomvalidationService","control","regex","RegExp","test","invalidPassword","confirmPassword","formGroup","passwordControl","confirmPasswordControl","errors","passwordMismatch","setErrors","userControl","setTimeout","validateUserName","userNameNotAvailable","userName","UserList","indexOf","RootService","newItem","type","updateItem","originalItem","query","singleBook","UploadService","httpClient","SERVER_URL","uploadURL","reportProgress","observe","pipe","UploadProgress","progress","Math","round","loaded","total","Response","body","HeaderComponent","SharedItemsModule","LoginComponent","LogoutComponent","removeItem","SignUpComponent","UserHomeComponent","UsersManagerModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuardService as AuthGuard } from './services/auth-guard.service';\nimport { UserHomeComponent } from './users-manager/user-home/user-home.component';\nimport { BookComponent } from './books-manager/book/book.component';\nimport { BookDetailsComponent } from './books-manager/book-details/book-details.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './users-manager/login/login.component';\nimport { SignUpComponent } from './users-manager/sign-up/sign-up.component';\nimport { LogoutComponent } from './users-manager/logout/logout.component';\nimport { NormalUserLoginComponent } from './normal-user/normal-user-login/normal-user-login.component';\nimport { NormalUserSignUpComponent } from './normal-user/normal-user-sign-up/normal-user-sign-up.component';\nimport { UserBookDetailsComponent } from './books-manager/user-book-details/user-book-details.component';\nimport { UserBooksComponent } from './books-manager/user-books/user-books.component';\nimport { NormalUserHOmeComponent } from './normal-user/normal-user-home/normal-user-home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'adminBookdetails/:id', component: BookDetailsComponent},\n  { path: 'adminBooks', component: BookComponent},\n  { path: 'adminLogin', component: LoginComponent },\n  { path: 'adminSignup', component: SignUpComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'adminHome', component: UserHomeComponent,canActivate : [AuthGuard] },\n  { path: 'userHome', component: NormalUserHOmeComponent,canActivate : [AuthGuard] },\n  { path: 'login', component: NormalUserLoginComponent },\n  { path: 'signup', component: NormalUserSignUpComponent },\n  { path: 'books', component:  UserBooksComponent},\n  { path: 'bookdetails/:id', component:  UserBookDetailsComponent},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' }, // redirect to `first-component`\n  { path: '**', component: HomeComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnInit {\n  title = 'book-list';\n  loggedIn;\n  constructor(\n    private authService : AuthService,\n    ) { }\n\n    ngOnInit(): void {\n      this.loggedIn = this.authService.isAuthenticated()\n    }\n}\n","<div class=\"container--1400\">\n      <router-outlet></router-outlet>\n</div>\n","import { SharedItemsModule } from './shared-items/shared-items.module';\nimport { UsersManagerModule } from './users-manager/users-manager.module';\nimport { BooksManagerModule } from './books-manager/books-manager.module';\nimport { NormalUserModule } from './normal-user/normal-user.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RatingModule } from 'ng-starrating';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    BooksManagerModule,\n    UsersManagerModule,\n    NormalUserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SharedItemsModule,\n    RatingModule,\n    ToastrModule.forRoot() \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { RootService } from '../../services/root.service';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.scss']\n})\nexport class BookDetailsComponent implements OnInit {\n  bookDetail: any;\n  readonly imageUrl = \"http://localhost:5000/\";\n  constructor(\n    private rootService : RootService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.bookDetail =  {\n      '_id' : '',\n      'title' : '',\n      'blurb' : '',\n      'author' : '',\n      'category' : '',\n      'cover' : '',\n    };\n   }\n\n  ngOnInit(): void {\n    var id;\n    this.activatedRoute.params.subscribe(params => {\n      id = params['id'];\n    });\n    this.fetchBookdetails(id); \n  }\n  fetchBookdetails(id){\n    console.log(id);\n    var booksingle = {'_id':id};\n    this.rootService.postAPIsingleBook(booksingle).subscribe((response)=>{\n      this.bookDetail = response;\n      console.log(this.bookDetail)\n    },(error) => {\n      console.log('erred')\n    });\n    // console.log(this.bookDetail);\n  }\n\n}\n","<app-header></app-header>\n<div class=\"bookDetail row\">\n    <div class=\"col-md-3 bookDetail__left-container\">\n        <img src=\"{{imageUrl}}/{{bookDetail.cover}}\" alt=\"\" class=\"bookDetail__cover\">\n    </div>\n    <div class=\"col-md-9 bookDetail__right-container\">\n        <h1 class=\"bookDetail__heading bibliophile__heading\">\n            {{bookDetail.title}}\n        </h1>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__author\">\n                    <span class=\"bookDetail__sub\">by</span> {{bookDetail.author}}\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__category\">\n                    <span class=\"bookDetail__sub\">in</span> {{bookDetail.category}}\n                </div>\n            </div>\n        </div>\n        <div class=\"bookDetail__description\">\n            {{bookDetail.blurb}}\n        </div>\n    </div>    \n</div>","// import { BookInventory } from '../../model/book-inventory';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { UploadService } from './../../services/upload.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n  // books = books;\n  readonly imageUrl = \"http://localhost:5000/\";\n  submitted = false;\n  updating = false ;\n  enableaddBooks = false;\n  error;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  books;\n  loggedIn;\n  booksForm : FormGroup;\n  booksOrgForm : FormGroup;\n  // newBook = new BookInventory('','','','','');\n  constructor(\n      private rootService : RootService,\n      private authService : AuthService,\n      private formBuilder: FormBuilder,\n      private uploadService : UploadService,\n      private toastr: ToastrService\n    ) {\n    \n  }\n  \n  ngOnInit(): void {\n    this.getBooks();\n    this.loggedIn = this.authService.isAuthenticated();\n    this.booksForm = this.formBuilder.group({\n      title : ['',Validators.required],\n      author : ['',Validators.required],\n      category : [''],\n      blurb : ['',[Validators.minLength(20), \n        Validators.maxLength(400)]],\n      cover : [],\n    });\n    this.booksOrgForm = this.formBuilder.group({\n      title : ['',Validators.required],\n      author : ['',Validators.required],\n      category : [''],\n      blurb : ['',[Validators.minLength(20), \n        Validators.maxLength(400)]],\n      cover : [],\n    });\n  }\n  share() {\n    window.alert('Book Shared');\n  }\n  get f() { \n    return this.booksForm.controls; \n  }\n  addBooks() {\n    this.submitted = true;\n    this.enableaddBooks =false;\n    var titleval = this.booksForm.value.title;;\n    var authorval = this.booksForm.value.author;\n    var catval = this.booksForm.value.category;\n    var blurbval = this.booksForm.value.blurb;\n    var coverval = this.booksForm.value.cover;\n    var newBookItem;\n    if(coverval!=\"\"){\n      var filename = coverval.replace(/^.*[\\\\\\/]/, '');\n      var fileExt = filename.split('.').pop();\n      var covername = (titleval.split(' ').join('_'))+'_'+(authorval.split(' ').join('_'))+\".\"+fileExt;\n      const formData = new FormData();\n      formData.append('file', this.booksForm.get('cover').value , covername );\n      this.uploadService.upload(formData).subscribe(\n        (res) => this.uploadResponse = res,\n        (err) => this.error = err\n      );   \n      newBookItem = {'title' : titleval, 'author' : authorval, 'category': catval, 'blurb' : blurbval, 'cover' : covername};\n    }\n    else {\n      newBookItem = {'title' : titleval, 'author' : authorval, 'category': catval, 'blurb' : blurbval};\n    }\n\n    if(this.updating){\n      console.log(\"Original\");\n      console.log(this.booksOrgForm);\n      var orgcoverval = this.booksOrgForm.value.cover;\n      var originalData = {'cover': orgcoverval};\n      this.rootService.postAPIUpdateData(newBookItem, originalData).subscribe((response)=>{\n        console.log(response);\n        this.getBooks();\n        this.updating = false;\n        this.toastr.success(\"Book Updated!\");\n      },(error) => {\n          console.log('error is ', error);\n          this.toastr.error(\"Book update failed!\");\n      });\n    }else {\n      this.rootService.postAPIData(newBookItem).subscribe((response)=>{\n        console.log(response);\n        this.getBooks();\n        this.toastr.success(\"New Book Added!\");\n      },(error) => {\n          console.log('error is ', error);\n          this.toastr.error(\"New book adding failed!\");\n      });\n    }\n    \n  }\n  getBooks(){\n    this.rootService.getAPIData().subscribe((response)=>{\n      console.log(response);\n      this.books = response['booklists'];\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  removeBook(book){\n    // console.log('Remove book');\n    // console.log(cover);\n    var bookVal = book\n    this.rootService.removeAPIData(bookVal).subscribe((response)=>{\n      console.log(response);\n      this.getBooks();\n      this.toastr.success(\"Book Removed!\");\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  updateBook(book) {\n    this.updating = true; \n    this.enableaddBooks =true;\n    window.scroll(0,0);\n    this.booksForm.get('title').setValue(book.title);\n    this.booksForm.get('author').setValue(book.author);\n    this.booksForm.get('category').setValue(book.category);\n    this.booksForm.get('blurb').setValue(book.blurb);\n    this.booksForm.get('cover').setValue('');\n\n    this.booksOrgForm.get('title').setValue(book.title);\n    this.booksOrgForm.get('author').setValue(book.author);\n    this.booksOrgForm.get('category').setValue(book.category);\n    this.booksOrgForm.get('blurb').setValue(book.blurb);\n    this.booksOrgForm.get('cover').setValue(book.cover);\n    \n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.booksForm.get('cover').setValue(file);\n    }\n  }\n  enableAddBooks() {\n    this.enableaddBooks =true;\n  }\n  cancelAddBooks() {\n    this.enableaddBooks =false;\n    this.booksForm.get('title').setValue('');\n    this.booksForm.get('author').setValue('');\n    this.booksForm.get('category').setValue('');\n    this.booksForm.get('blurb').setValue('');\n    this.booksForm.get('cover').setValue('');\n  }\n}\n","<app-header></app-header>\n<div class=\"books__add-container\" *ngIf=\"enableaddBooks\">\n  <h2 class=\"bibliophile__heading\">Add Books</h2>\n      <div class=\"Status-message\">\n        <div *ngIf=\"error\" class=\"error\">\n          {{ error.message }}\n        </div>\n        <div *ngIf=\"uploadResponse.status === 'error'\" class=\"error occured\">\n          {{ uploadResponse.message }}\n        </div>\n        <div *ngIf=\"uploadResponse.status === 'progress'\" class=\"progress\">\n      \n      \n          <div role=\"progressbar\" [style.width.%]=\"uploadResponse.message\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"  class=\"progress ing\">\n            {{uploadResponse.message}}%\n          </div>\n      \n        </div>\n        </div>\n      <form (ngSubmit)=\"addBooks();booksForm.reset()\" [formGroup]=\"booksForm\"  enctype=\"multipart/form-data\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" formControlName=\"title\">\n          <span class=\"text-danger\"\n          *ngIf=\"(f.title.touched || submitted) && f.title.errors?.required\">\n          Title is required\n        </span>   \n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Author</label>\n          <input type=\"text\" class=\"form-control\" id=\"author\" name=\"author\"\n          formControlName=\"author\">\n          <span class=\"text-danger\"\n          *ngIf=\"(f.author.touched || submitted) && f.author.errors?.required\">\n          Author is required\n        </span> \n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Category</label>\n          <input type=\"text\" class=\"form-control\" id=\"category\" name=\"category\"\n          formControlName=\"category\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Blurb</label>\n          <textarea name=\"blurb\"  class=\"form-control\" id=\"blurb\" cols=\"30\" rows=\"10\"\n          formControlName=\"blurb\"></textarea>\n        </div>\n        \n        <div class=\"form-group\">\n          <input type=\"file\" class=\"form-control\" name=\"cover\" id=\"cover\"\n          formControlName=\"cover\" (change)=\"onFileChange($event)\" />\n          \n        </div>\n       \n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        <button class=\"btn btn-danger book__cancel-button\" (click)=\"cancelAddBooks()\">Cancel</button>\n      </form>\n    </div> \n   <div class=\"book__container\" *ngIf=\"!enableaddBooks\">\n    <h1 class=\"book__page-title bibliophile__heading\">Books</h1>\n    <div class=\"row\"  *ngIf=\"loggedIn\">\n      <div class=\"col-12 book__add-main-button-container\">\n        <button class=\"btn btn-primary book__add-main-button\" (click)=\"enableAddBooks()\">Add new book</button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngFor=\"let book of books\" class=\"col-md-3\">\n        <div class=\"card book__item\" [class.active]=\"loggedIn\">\n          <div class=\"card-body book__item-container\">\n            <a routerLink=\"/bookdetails/{{book._id}}\">\n              <div class=\"book__cover\" style=\"background-image:url({{imageUrl}}/{{book.cover}})\">\n\n              </div>\n            </a>\n            <!-- <img src=\"{{imageUrl}}/{{book.cover}}\" alt=\"\" class=\"book__cover\"> -->\n            <a class=\"card-title book__main-title\" routerLink=\"/bookdetails/{{book._id}}\">\n              {{ book.title }}\n            </a>\n            <h6 class=\"card-subtitle book__sub-title\">\n              {{book.author}}\n            </h6>\n            <div *ngIf=\"book.blurb\" class=\"card-text book__description\">\n              Summary: {{(book.blurb.length>300)? (book.blurb | slice:0:300)+'..':(book.blurb)}}\n            </div>\n            <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n              <button class=\"btn btn-primary book__update\" (click)=\"updateBook(book)\">Update Book</button>\n              <button class=\"btn btn-danger book__delete\" (click)=\"removeBook(book)\">Delete Book</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n   </div>\n","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BookComponent } from './book/book.component';\nimport { AppRoutingModule } from './../app-routing.module';\nimport { FormsModule , ReactiveFormsModule }   from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { UserBooksComponent } from './user-books/user-books.component';\nimport { UserBookDetailsComponent } from './user-book-details/user-book-details.component';\nimport { RatingModule } from 'ng-starrating';\n@NgModule({\n  declarations: [\n    BookComponent,\n    BookDetailsComponent,\n    UserBooksComponent,\n    UserBookDetailsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedItemsModule,\n    RatingModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class BooksManagerModule { }\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { StarRatingComponent } from 'ng-starrating';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-book-details',\n  templateUrl: './user-book-details.component.html',\n  styleUrls: ['./user-book-details.component.scss']\n})\nexport class UserBookDetailsComponent implements OnInit {\n  bookDetail: any;\n  loggedIn : any;\n  userId : any;\n  totalstar = 5;\n  readonly imageUrl = \"http://localhost:5000/\";\n  constructor(\n    private rootService : RootService,\n    private authService : AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService\n  ) {\n    this.bookDetail =  {\n      '_id' : '',\n      'title' : '',\n      'blurb' : '',\n      'author' : '',\n      'category' : '',\n      'cover' : '',\n    };\n    this.userId =\"\";\n   }\n\n  ngOnInit(): void {\n    var id;\n    this.loggedIn = this.authService.isAuthenticated();\n    this.activatedRoute.params.subscribe(params => {\n      id = params['id'];\n    });\n    this.fetchBookdetails(id); \n    if(this.loggedIn){\n      var userdet = localStorage.getItem('userInfo');\n      var data = JSON.parse(userdet);\n      this.userId= data.id;\n    }\n  }\n  fetchBookdetails(id){\n    console.log(id);\n    var booksingle = {'_id':id};\n    this.rootService.postAPIsingleBook(booksingle).subscribe((response)=>{\n      this.bookDetail = response;\n      console.log(this.bookDetail)\n    },(error) => {\n      console.log('erred')\n    });\n    // console.log(this.bookDetail);\n  }\n  onRate($event:{oldValue:number, newValue:number, starRating:StarRatingComponent}) {\n    // console.log(this.bookDetail._id);\n    // console.log(this.userId);\n    // console.log(`${$event.newValue}`);\n    var newRatingItem = {'bookid' : this.bookDetail._id, 'userid' : this.userId, 'value': $event.newValue, 'oldValue': $event.oldValue};\n    this.rootService.postRatingData(newRatingItem).subscribe((response)=>{\n      console.log(response);\n      this.toastr.success(\"Rating Succesful\");\n    },(error) => {\n        console.log('error is ', error)\n        this.toastr.error(\"Rating Failed\");\n    });\n  }\n}\n","<app-header></app-header>\n<div class=\"bookDetail row\">\n    <div class=\"col-md-3 bookDetail__left-container\">\n        <img src=\"{{imageUrl}}/{{bookDetail.cover}}\" alt=\"\" class=\"bookDetail__cover\">\n    </div>\n    <div class=\"col-md-9 bookDetail__right-container\">\n        <h1 class=\"bookDetail__heading bibliophile__heading\">\n            {{bookDetail.title}}\n        </h1>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__author\">\n                    <span class=\"bookDetail__sub\">by</span> {{bookDetail.author}}\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__category\">\n                    <span class=\"bookDetail__sub\">in</span> {{bookDetail.category}}\n                </div>\n            </div>\n        </div>\n        <div class=\"bookDetail__description\">\n            {{bookDetail.blurb}}\n        </div>\n        <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n            <star-rating value=\"5\" totalstars={{totalstar}} checkedcolor=\"red\" uncheckedcolor=\"gray\" size=\"24px\"\n            readonly=\"false\" (rate)=\"onRate($event)\"></star-rating>\n            <button class=\"btn btn-primary book__review\">Review</button>\n        </div>\n    </div>    \n</div>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { UploadService } from './../../services/upload.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StarRatingComponent } from 'ng-starrating';\n\n@Component({\n  selector: 'app-user-books',\n  templateUrl: './user-books.component.html',\n  styleUrls: ['./user-books.component.scss']\n})\nexport class UserBooksComponent implements OnInit {\n  readonly imageUrl = \"http://localhost:5000/\";\n  submitted = false;\n  updating = false ;\n  enableaddBooks = false;\n  error;\n  totalstar = 5;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  books;\n  loggedIn;\n  booksForm : FormGroup;\n  booksOrgForm : FormGroup;\n  // newBook = new BookInventory('','','','','');\n  constructor(\n      private rootService : RootService,\n      private authService : AuthService,\n      private formBuilder: FormBuilder,\n      private uploadService : UploadService,\n      private toastr: ToastrService\n    ) {\n    \n  }\n  \n  ngOnInit(): void {\n    this.getBooks();\n    this.loggedIn = this.authService.isAuthenticated();\n  }\n  share() {\n    window.alert('Book Shared');\n  }\n  get f() { \n    return this.booksForm.controls; \n  }\n  getBooks(){\n    this.rootService.getAPIData().subscribe((response)=>{\n      console.log(response);\n      this.books = response['booklists'];\n      this.fetchAverageRating();\n      console.log(\"After Update\");\n      console.log(this.books);\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  revieBook(book) {\n    console.log(book);\n  }\n  fetchAverageRating(){\n    console.log('Before avergae rating'); \n    // console.log(this.books); \n    var ratingAvg;\n    for(let book of this.books){\n      console.log(book._id);\n      var bookrating = {'bookid' : book._id};\n      this.rootService.getRatingData(bookrating).subscribe((response)=>{\n        ratingAvg = response;\n        if(ratingAvg.avgRating != \"\"){\n          book.avRating = (ratingAvg.avgRating[0].pop ? ratingAvg.avgRating[0].pop : 0);\n        }\n      },(error) => {\n          console.log('error is ', error)\n      });\n    }\n  }\n  onRate($event:{oldValue:number, newValue:number, starRating:StarRatingComponent}) {\n    // this.totalstar = $event.newValue;\n    console.log('hre');\n    console.log(`Old Value:${$event.oldValue}, \n      New Value: ${$event.newValue}, \n      Checked Color: ${$event.starRating.checkedcolor}, \n      Unchecked Color: ${$event.starRating.uncheckedcolor}`);\n  }\n}\n","<app-header></app-header>\n   <div class=\"book__container\" *ngIf=\"!enableaddBooks\">\n    <h1 class=\"book__page-title bibliophile__heading\">Books</h1>\n    <div class=\"row\">\n      <div *ngFor=\"let book of books\" class=\"col-md-3\">\n        <div class=\"card book__item\" [class.active]=\"loggedIn\">\n          <div class=\"card-body book__item-container\">\n            <a routerLink=\"/bookdetails/{{book._id}}\">\n              <div class=\"book__cover\" style=\"background-image:url({{imageUrl}}/{{book.cover}})\">\n\n              </div>\n            </a>\n            <!-- <img src=\"{{imageUrl}}/{{book.cover}}\" alt=\"\" class=\"book__cover\"> -->\n            <a class=\"card-title book__main-title\" routerLink=\"/bookdetails/{{book._id}}\">\n              {{ book.title }}\n            </a>\n            <h6 class=\"card-subtitle book__sub-title\">\n              {{book.author}}\n            </h6>\n            <div *ngIf=\"book.blurb\" class=\"card-text book__description\">\n              Summary: {{(book.blurb.length>300)? (book.blurb | slice:0:300)+'..':(book.blurb)}}\n            </div>\n            <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n              <star-rating value=\"{{book.avRating}}\" totalstars={{totalstar}} checkedcolor=\"gold\" uncheckedcolor=\"gray\" size=\"24px\"\n              readonly=\"true\" (rate)=\"onRate($event)\"></star-rating>\n              <button class=\"btn btn-primary book__review\" (click)=\"revieBook(book)\">Review</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n   </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/login.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are the quietest and most constant of friends; they are the most accessible and wisest of counselors, and the most patient of teachers.”<br/>\n            <span>\n                ― Charles W. Eliot\n            </span>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-normal-user-home',\n  templateUrl: './normal-user-home.component.html',\n  styleUrls: ['./normal-user-home.component.scss']\n})\nexport class NormalUserHOmeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/home.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are letters in bottles, cast into the waves of time, from one person trying to save the world to another.”<br/>\n            <span>\n                ― Amal El-Mohtar\n            </span>\n        </p>\n    </div>\n</div>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-normal-user-login',\n  templateUrl: './normal-user-login.component.html',\n  styleUrls: ['./normal-user-login.component.scss']\n})\nexport class NormalUserLoginComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted = false; \n  userEmail : String;\n  userPassword : String;\n\n  constructor(\n    private rootService : RootService, \n    private authService : AuthService, \n    private router : Router,\n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private toastr: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n    });\n  }\n  get f() { \n    return this.loginForm.controls; \n  }\n  login(){\n    console.log('onetwo');\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      var userval = this.loginForm.value.user;\n      var passwordval = this.loginForm.value.password;\n      var userItem = {'username': userval, 'password' : passwordval, 'type' : 'normal'  };\n      // this.rootService.postAPIData(userItem).subscribe((response)=>{\n      //   console.log(response);\n      //   this.router.navigate(['/books'])\n      // },(error) => {\n      //     console.log('error is ', error)\n      // });\n      this.authService.validate(userItem)\n      .then((response) => {\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/userHome']);\n        this.toastr.success(\"Login Succesful\");\n      },(error) => {\n        console.log('error is ', error);\n        this.toastr.error(\"Login Failed!\");\n    });\n    }\n\n\n    \n  }\n}\n","<app-header></app-header>\n<div class=\"login__container\">\n  <h1 class=\"login__heading bibliophile__heading\">Log In</h1>\n\n  <form  [formGroup]=\"loginForm\"\n  (ngSubmit)=\"login()\" class=\"login__form\">\n      <div class=\"form-group\">\n        <label for=\"user\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n          Username is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n            User Name is not available\n        </span>      \n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n          Password is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n            Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n            letter and 1 number\n        </span>      \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</div>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { AuthService } from './../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-normal-user-sign-up',\n  templateUrl: './normal-user-sign-up.component.html',\n  styleUrls: ['./normal-user-sign-up.component.scss']\n})\nexport class NormalUserSignUpComponent implements OnInit {\n  userForm : FormGroup;\n  submitted = false;  \n  constructor(\n    private authService : AuthService, \n    private rootService : RootService, \n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private router : Router,\n    private toastr: ToastrService\n  ) {\n    \n   }\n  ngOnInit(): void {  \n    this.userForm = this.formBuilder.group({\n      fname : ['',Validators.required],\n      lname : ['',Validators.required],\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      cpassword : ['', [Validators.required]],\n    },\n    {\n      validator: this.customValidator.MatchPassword('password', 'cpassword'),\n    });\n  }\n  get f() { \n    return this.userForm.controls; \n  }\n\n  \n  addUsers() {\n    this.submitted = true;\n    if (this.userForm.valid) {\n      var fnameval = this.userForm.value.fname;\n      var lnameval = this.userForm.value.lname;\n      var userval = this.userForm.value.user;\n      var passwordval = this.userForm.value.password;\n      var newUserItem = {'fname' : fnameval, 'lname' : lnameval, 'user': userval, 'password' : passwordval, 'type' : 'normal' };\n      this.rootService.postAPIData(newUserItem,\"users\").subscribe((response)=>{\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/userHome']);\n        this.toastr.success(\"Sign Up Succesful\");\n      },(error) => {\n          console.log('error is ', error)\n          this.toastr.error(\"Sign Up Failed\");\n      });\n    }\n    \n  }\n}\n","<app-header></app-header>\n<h1 class=\"bibliophile__heading\">Sign Up</h1>\n\n<form  [formGroup]=\"userForm\"\n(ngSubmit)=\"addUsers()\" class=\"signup__form\">\n    \n    <div class=\"form-group\">\n      <label for=\"fname\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\"\n       formControlName=\"fname\"  \n       [ngClass]=\"{ 'is-invalid': submitted && f.fname.errors }\" > \n      <span class=\"text-danger\"\n        *ngIf=\"(f.fname.touched || submitted) && f.fname.errors?.required\">\n        First Name is required\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"lname\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\" name=\"lname\" \n      required>\n      <span class=\"text-danger\"\n        *ngIf=\"(f.lname.touched || submitted) && f.lname.errors?.required\">\n        Last Name is required\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"user\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n        Username is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n          User Name is not available\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n        Password is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n          Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n          letter and 1 number\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"cpassword\">Confirm Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"cpassword\" formControlName=\"cpassword\" \n      name=\"cpassword\"  required> \n      <span class=\"text-danger\"\n        *ngIf=\"(f.cpassword.touched || submitted) && f.cpassword.errors?.required\">\n        Confirm Password is required\n      </span> \n      <span class=\"text-danger\"\n        *ngIf=\"f.cpassword.touched && f.cpassword.errors?.passwordMismatch\">\n        Passwords doesnot match\n    </span>      \n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n  </form>","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule  }   from '@angular/forms';\nimport { NormalUserLoginComponent } from './normal-user-login/normal-user-login.component';\nimport { NormalUserSignUpComponent } from './normal-user-sign-up/normal-user-sign-up.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NormalUserHOmeComponent } from './normal-user-home/normal-user-home.component';\n\n\n@NgModule({\n  declarations: [\n    NormalUserLoginComponent, \n    NormalUserSignUpComponent, NormalUserHOmeComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedItemsModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class NormalUserModule { }\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate,Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService : AuthService, private route : Router) { }\n\n  canActivate(){\n    if(this.authService.isAuthenticated()){\n      return true;\n    }\n    this.route.navigate(['login']);\n    return false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http : HttpClient) { }\n\n  public isAuthenticated() : Boolean {\n    let userData = localStorage.getItem('userInfo')\n    if(userData && JSON.parse(userData)){\n      return true;\n    }\n    return false;\n  }\n\n  public setUserInfo(user){\n    localStorage.setItem('userInfo', JSON.stringify(user));\n  }\n\n  public validate(userItem) {\n    return this.http.post('book-manager001/authenticate', userItem).toPromise()\n  }\n  // public logout() {\n  //   console.log(\"out\");\n  //   let userData = localStorage.getItem('userInfo');\n  //   console.log(userData);\n  //   return this.http.get('http://localhost:3000/v1/logout').toPromise()\n  // }\n}","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomvalidationService {\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    }\n  }\n\n  userNameValidator(userControl: AbstractControl) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.validateUserName(userControl.value)) {\n          resolve({ userNameNotAvailable: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n\n  validateUserName(userName: string) {\n    const UserList = ['user', 'superuser'];\n    return (UserList.indexOf(userName) > -1);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootService {\n\n  constructor(private http: HttpClient) { }\n  getAPIData(){\n    return this.http.get('http://localhost:3000/v1/books/');\n  }\n  postAPIData(newItem,type=\"books\"){\n    if(type==\"books\"){\n      return this.http.post('http://localhost:3000/v1/books/', newItem);\n    }\n    else if(type==\"users\"){\n      return this.http.post('http://localhost:3000/v1/users/', newItem);\n    }\n  }\n  postAPIUpdateData(updateItem,originalItem){\n    console.log(\"originalItem\");\n    console.log(originalItem);\n    var query = {\n      'updated' : updateItem,\n      'original' : originalItem,\n    }\n    return this.http.post('book-manager001/updateBooks/', query);\n  }\n  removeAPIData(book){\n    return this.http.post('book-manager001/removeBooks/', book);\n  }\n  // userLogin(userItem){\n  //   return this.http.post('http://localhost:3000/v1/users/', userItem);\n\n  // }\n  postAPIsingleBook(singleBook){\n    return this.http.post('book-manager001/bookOne/', singleBook);\n  }\n\n  postRatingData(newRatingItem){\n    return this.http.post('book-manager001/rate/', newRatingItem);\n  }\n  getRatingData(book){\n    return this.http.post('book-manager001/listrate/', book);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  \n  SERVER_URL: string = \"http://localhost:8080\";\n  constructor(private httpClient: HttpClient) { }\n\n  public upload(data) {\n    //let uploadURL = `${this.SERVER_URL}/api/upload`;\n    let uploadURL = 'book-manager001/upload/';\n    console.log('Meow');\n    console.log(data);  \n    return this.httpClient.post<any>(uploadURL, data, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map((event) => {\n\n      switch (event.type) {\n\n        case HttpEventType.UploadProgress:\n          const progress = Math.round(100 * event.loaded / event.total);\n          return { status: 'progress', message: progress };\n\n        case HttpEventType.Response:\n          return event.body;\n        default:\n          return `Unhandled event: ${event.type}`;\n      }\n    })\n    );\n  }\n}\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  loggedIn : any;\n  userData : any;\n  constructor(\n    private authService : AuthService,\n  ) { \n      this.userData =\"\";\n  }\n\n  ngOnInit(): void {\n    this.loggedIn = this.authService.isAuthenticated()\n    if(this.loggedIn){\n      var userdet = localStorage.getItem('userInfo');\n      var data = JSON.parse(userdet);\n      this.userData= data.user\n      // console.log(data.user);\n    }\n  }\n\n}\n","<nav class=\"navigation navigation--main\">\n    <a routerLink=\"/home\"><img src=\"assets/img/logo.png\"></a>\n    <ul class=\"navigation__container\">\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/home\" routerLinkActive=\"active\" class=\"navigation__link\">Home</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a routerLink=\"/userHome\" routerLinkActive=\"active\" class=\"navigation__link\">Home</a></li>\n      <li  class=\"navigation__item\"><a routerLink=\"/books\" routerLinkActive=\"active\" class=\"navigation__link\">Books</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/login\" routerLinkActive=\"active\" class=\"navigation__link\">Login</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/signup\" routerLinkActive=\"active\" class=\"navigation__link\">Sign Up</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a class=\"navigation__link\">{{userData}}</a>\n        <ul class=\"navigation__sub-menu\">\n            <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a routerLink=\"/logout\" routerLinkActive=\"active\" class=\"navigation__link\">Log Out</a></li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n  <div class=\"clear\"></div>","import { AppRoutingModule } from './../app-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ],\n  exports: [HeaderComponent], \n})\nexport class SharedItemsModule { }\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted = false; \n  userEmail : String;\n  userPassword : String;\n\n  constructor(\n    private rootService : RootService, \n    private authService : AuthService, \n    private router : Router,\n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private toastr: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n    });\n  }\n  get f() { \n    return this.loginForm.controls; \n  }\n  login(){\n    console.log('onetwo');\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      var userval = this.loginForm.value.user;\n      var passwordval = this.loginForm.value.password;\n      var userItem = {'username': userval, 'password' : passwordval, 'type' : 'admin' };\n      // this.rootService.postAPIData(userItem).subscribe((response)=>{\n      //   console.log(response);\n      //   this.router.navigate(['/books'])\n      // },(error) => {\n      //     console.log('error is ', error)\n      // });\n      this.authService.validate(userItem)\n      .then((response) => {\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/adminHome']);\n        this.toastr.success(\"Login Succesful\");\n      },(error) => {\n        console.log('error is ', error);\n        this.toastr.error(\"Login Failed!\");\n    });\n    }\n\n\n    \n  }\n}\n","<app-header></app-header>\n<div class=\"login__container\">\n  <h1 class=\"login__heading bibliophile__heading\">Log In</h1>\n\n  <form  [formGroup]=\"loginForm\"\n  (ngSubmit)=\"login()\" class=\"login__form\">\n      <div class=\"form-group\">\n        <label for=\"user\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n          Username is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n            User Name is not available\n        </span>      \n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n          Password is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n            Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n            letter and 1 number\n        </span>      \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService, \n    private router : Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    localStorage.removeItem('userInfo');\n    this.router.navigate(['/home']); \n    this.toastr.success(\"Logged out Succesfully\");\n  }\n\n}\n","<p>Logged out Succesfully!</p>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { AuthService } from './../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  userForm : FormGroup;\n  submitted = false;  \n  constructor(\n    private authService : AuthService, \n    private rootService : RootService, \n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private router : Router,\n    private toastr: ToastrService\n  ) {\n    \n   }\n  ngOnInit(): void {  \n    this.userForm = this.formBuilder.group({\n      fname : ['',Validators.required],\n      lname : ['',Validators.required],\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      cpassword : ['', [Validators.required]],\n    },\n    {\n      validator: this.customValidator.MatchPassword('password', 'cpassword'),\n    });\n  }\n  get f() { \n    return this.userForm.controls; \n  }\n\n  \n  addUsers() {\n    this.submitted = true;\n    if (this.userForm.valid) {\n      var fnameval = this.userForm.value.fname;\n      var lnameval = this.userForm.value.lname;\n      var userval = this.userForm.value.user;\n      var passwordval = this.userForm.value.password;\n      var newUserItem = {'fname' : fnameval, 'lname' : lnameval, 'user': userval, 'password' : passwordval, 'type' : 'admin' };\n      this.rootService.postAPIData(newUserItem,\"users\").subscribe((response)=>{\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/adminHome']);\n        this.toastr.success(\"Sign Up Succesful\");\n      },(error) => {\n          console.log('error is ', error)\n          this.toastr.error(\"Sign Up Failed\");\n      });\n    }\n    \n  }\n  \n   \n}\n","<app-header></app-header>\n<h1 class=\"bibliophile__heading\">Sign Up</h1>\n\n<form  [formGroup]=\"userForm\"\n(ngSubmit)=\"addUsers()\" class=\"signup__form\">\n    \n    <div class=\"form-group\">\n      <label for=\"fname\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\"\n       formControlName=\"fname\"  \n       [ngClass]=\"{ 'is-invalid': submitted && f.fname.errors }\" > \n      <span class=\"text-danger\"\n        *ngIf=\"(f.fname.touched || submitted) && f.fname.errors?.required\">\n        First Name is required\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"lname\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\" name=\"lname\" \n      required>\n      <span class=\"text-danger\"\n        *ngIf=\"(f.lname.touched || submitted) && f.lname.errors?.required\">\n        Last Name is required\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"user\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n        Username is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n          User Name is not available\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n        Password is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n          Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n          letter and 1 number\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"cpassword\">Confirm Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"cpassword\" formControlName=\"cpassword\" \n      name=\"cpassword\"  required> \n      <span class=\"text-danger\"\n        *ngIf=\"(f.cpassword.touched || submitted) && f.cpassword.errors?.required\">\n        Confirm Password is required\n      </span> \n      <span class=\"text-danger\"\n        *ngIf=\"f.cpassword.touched && f.cpassword.errors?.passwordMismatch\">\n        Passwords doesnot match\n    </span>      \n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.scss']\n})\nexport class UserHomeComponent implements OnInit {\n  user : string;\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/home.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are letters in bottles, cast into the waves of time, from one person trying to save the world to another.”<br/>\n            <span>\n                ― Amal El-Mohtar\n            </span>\n        </p>\n    </div>\n</div>","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule  }   from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { UserHomeComponent } from './user-home/user-home.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ToastrModule } from 'ngx-toastr';\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    UserHomeComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedItemsModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class UsersManagerModule {\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}