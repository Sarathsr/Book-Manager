{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/books-manager/book-details/book-details.component.ts","./src/app/books-manager/book-details/book-details.component.html","./src/app/books-manager/book/book.component.ts","./src/app/books-manager/book/book.component.html","./src/app/books-manager/books-manager.module.ts","./src/app/books-manager/user-book-details/user-book-details.component.ts","./src/app/books-manager/user-book-details/user-book-details.component.html","./src/app/books-manager/user-books/user-books.component.ts","./src/app/books-manager/user-books/user-books.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/normal-user/normal-user-home/normal-user-home.component.ts","./src/app/normal-user/normal-user-home/normal-user-home.component.html","./src/app/normal-user/normal-user-login/normal-user-login.component.ts","./src/app/normal-user/normal-user-login/normal-user-login.component.html","./src/app/normal-user/normal-user-sign-up/normal-user-sign-up.component.ts","./src/app/normal-user/normal-user-sign-up/normal-user-sign-up.component.html","./src/app/normal-user/normal-user.module.ts","./src/app/services/auth-guard.service.ts","./src/app/services/auth.service.ts","./src/app/services/customvalidation.service.ts","./src/app/services/root.service.ts","./src/app/services/upload.service.ts","./src/app/shared-items/header/header.component.ts","./src/app/shared-items/header/header.component.html","./src/app/shared-items/shared-items.module.ts","./src/app/users-manager/login/login.component.ts","./src/app/users-manager/login/login.component.html","./src/app/users-manager/logout/logout.component.ts","./src/app/users-manager/logout/logout.component.html","./src/app/users-manager/sign-up/sign-up.component.ts","./src/app/users-manager/sign-up/sign-up.component.html","./src/app/users-manager/user-home/user-home.component.ts","./src/app/users-manager/user-home/user-home.component.html","./src/app/users-manager/users-manager.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AuthGuardService as AuthGuard } from './services/auth-guard.service';\nimport { UserHomeComponent } from './users-manager/user-home/user-home.component';\nimport { BookComponent } from './books-manager/book/book.component';\nimport { BookDetailsComponent } from './books-manager/book-details/book-details.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './users-manager/login/login.component';\nimport { SignUpComponent } from './users-manager/sign-up/sign-up.component';\nimport { LogoutComponent } from './users-manager/logout/logout.component';\nimport { NormalUserLoginComponent } from './normal-user/normal-user-login/normal-user-login.component';\nimport { NormalUserSignUpComponent } from './normal-user/normal-user-sign-up/normal-user-sign-up.component';\nimport { UserBookDetailsComponent } from './books-manager/user-book-details/user-book-details.component';\nimport { UserBooksComponent } from './books-manager/user-books/user-books.component';\nimport { NormalUserHOmeComponent } from './normal-user/normal-user-home/normal-user-home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'adminBookdetails/:id', component: BookDetailsComponent},\n  { path: 'adminBooks', component: BookComponent},\n  { path: 'adminLogin', component: LoginComponent },\n  { path: 'adminSignup', component: SignUpComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'adminHome', component: UserHomeComponent,canActivate : [AuthGuard] },\n  { path: 'userHome', component: NormalUserHOmeComponent,canActivate : [AuthGuard] },\n  { path: 'login', component: NormalUserLoginComponent },\n  { path: 'signup', component: NormalUserSignUpComponent },\n  { path: 'books', component:  UserBooksComponent},\n  { path: 'bookdetails/:id', component:  UserBookDetailsComponent},\n  { path: '',   redirectTo: '/home', pathMatch: 'full' }, // redirect to `first-component`\n  { path: '**', component: HomeComponent },\n  { path: '**', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent  implements OnInit {\n  title = 'book-list';\n  loggedIn;\n  constructor(\n    private authService : AuthService,\n    ) { }\n\n    ngOnInit(): void {\n      this.loggedIn = this.authService.isAuthenticated()\n    }\n}\n","<div class=\"container--1400\">\n      <router-outlet></router-outlet>\n</div>\n","import { SharedItemsModule } from './shared-items/shared-items.module';\nimport { UsersManagerModule } from './users-manager/users-manager.module';\nimport { BooksManagerModule } from './books-manager/books-manager.module';\nimport { NormalUserModule } from './normal-user/normal-user.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule }   from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { RatingModule } from 'ng-starrating';\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    BooksManagerModule,\n    UsersManagerModule,\n    NormalUserModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    SharedItemsModule,\n    RatingModule,\n    ToastrModule.forRoot() \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { RootService } from '../../services/root.service';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.scss']\n})\nexport class BookDetailsComponent implements OnInit {\n  bookDetail: any;\n  readonly imageUrl = \"http://localhost:5000/\";\n  constructor(\n    private rootService : RootService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.bookDetail =  {\n      '_id' : '',\n      'title' : '',\n      'blurb' : '',\n      'author' : '',\n      'category' : '',\n      'cover' : '',\n    };\n   }\n\n  ngOnInit(): void {\n    var id;\n    this.activatedRoute.params.subscribe(params => {\n      id = params['id'];\n    });\n    this.fetchBookdetails(id); \n  }\n  fetchBookdetails(id){\n    console.log(id);\n    var booksingle = {'_id':id};\n    this.rootService.postAPIsingleBook(booksingle).subscribe((response)=>{\n      this.bookDetail = response;\n      console.log(this.bookDetail)\n    },(error) => {\n      console.log('erred')\n    });\n    // console.log(this.bookDetail);\n  }\n\n}\n","<app-header></app-header>\n<div class=\"bookDetail row\">\n    <div class=\"col-md-3 bookDetail__left-container\">\n        <img src=\"{{imageUrl}}/{{bookDetail.cover}}\" alt=\"\" class=\"bookDetail__cover\">\n    </div>\n    <div class=\"col-md-9 bookDetail__right-container\">\n        <h1 class=\"bookDetail__heading bibliophile__heading\">\n            {{bookDetail.title}}\n        </h1>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__author\">\n                    <span class=\"bookDetail__sub\">by</span> {{bookDetail.author}}\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__category\">\n                    <span class=\"bookDetail__sub\">in</span> {{bookDetail.category}}\n                </div>\n            </div>\n        </div>\n        <div class=\"bookDetail__description\">\n            {{bookDetail.blurb}}\n        </div>\n    </div>    \n</div>","// import { BookInventory } from '../../model/book-inventory';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { UploadService } from './../../services/upload.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-book',\n  templateUrl: './book.component.html',\n  styleUrls: ['./book.component.scss']\n})\nexport class BookComponent implements OnInit {\n  // books = books;\n  readonly imageUrl = \"http://localhost:5000/\";\n  submitted = false;\n  updating = false ;\n  enableaddBooks = false;\n  error;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  books;\n  loggedIn;\n  booksForm : FormGroup;\n  booksOrgForm : FormGroup;\n  // newBook = new BookInventory('','','','','');\n  constructor(\n      private rootService : RootService,\n      private authService : AuthService,\n      private formBuilder: FormBuilder,\n      private uploadService : UploadService,\n      private toastr: ToastrService\n    ) {\n    \n  }\n  \n  ngOnInit(): void {\n    this.getBooks();\n    this.loggedIn = this.authService.isAuthenticated();\n    this.booksForm = this.formBuilder.group({\n      title : ['',Validators.required],\n      author : ['',Validators.required],\n      category : [''],\n      blurb : ['',[Validators.minLength(20), \n        Validators.maxLength(400)]],\n      cover : [],\n    });\n    this.booksOrgForm = this.formBuilder.group({\n      title : ['',Validators.required],\n      author : ['',Validators.required],\n      category : [''],\n      blurb : ['',[Validators.minLength(20), \n        Validators.maxLength(400)]],\n      cover : [],\n    });\n  }\n  share() {\n    window.alert('Book Shared');\n  }\n  get f() { \n    return this.booksForm.controls; \n  }\n  addBooks() {\n    this.submitted = true;\n    this.enableaddBooks =false;\n    var titleval = this.booksForm.value.title;;\n    var authorval = this.booksForm.value.author;\n    var catval = this.booksForm.value.category;\n    var blurbval = this.booksForm.value.blurb;\n    var coverval = this.booksForm.value.cover;\n    var newBookItem;\n    if(coverval!=\"\"){\n      var filename = coverval.replace(/^.*[\\\\\\/]/, '');\n      var fileExt = filename.split('.').pop();\n      var covername = (titleval.split(' ').join('_'))+'_'+(authorval.split(' ').join('_'))+\".\"+fileExt;\n      const formData = new FormData();\n      formData.append('file', this.booksForm.get('cover').value , covername );\n      this.uploadService.upload(formData).subscribe(\n        (res) => this.uploadResponse = res,\n        (err) => this.error = err\n      );   \n      newBookItem = {'title' : titleval, 'author' : authorval, 'category': catval, 'blurb' : blurbval, 'cover' : covername};\n    }\n    else {\n      newBookItem = {'title' : titleval, 'author' : authorval, 'category': catval, 'blurb' : blurbval};\n    }\n\n    if(this.updating){\n      console.log(\"Original\");\n      console.log(this.booksOrgForm);\n      var orgcoverval = this.booksOrgForm.value.cover;\n      var originalData = {'cover': orgcoverval};\n      this.rootService.postAPIUpdateData(newBookItem, originalData).subscribe((response)=>{\n        console.log(response);\n        this.getBooks();\n        this.updating = false;\n        this.toastr.success(\"Book Updated!\");\n      },(error) => {\n          console.log('error is ', error);\n          this.toastr.error(\"Book update failed!\");\n      });\n    }else {\n      this.rootService.postAPIData(newBookItem).subscribe((response)=>{\n        console.log(response);\n        this.getBooks();\n        this.toastr.success(\"New Book Added!\");\n      },(error) => {\n          console.log('error is ', error);\n          this.toastr.error(\"New book adding failed!\");\n      });\n    }\n    \n  }\n  getBooks(){\n    this.rootService.getAPIData().subscribe((response)=>{\n      console.log(response);\n      this.books = response['booklists'];\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  removeBook(book){\n    // console.log('Remove book');\n    // console.log(cover);\n    var bookVal = book\n    this.rootService.removeAPIData(bookVal).subscribe((response)=>{\n      console.log(response);\n      this.getBooks();\n      this.toastr.success(\"Book Removed!\");\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  updateBook(book) {\n    this.updating = true; \n    this.enableaddBooks =true;\n    window.scroll(0,0);\n    this.booksForm.get('title').setValue(book.title);\n    this.booksForm.get('author').setValue(book.author);\n    this.booksForm.get('category').setValue(book.category);\n    this.booksForm.get('blurb').setValue(book.blurb);\n    this.booksForm.get('cover').setValue('');\n\n    this.booksOrgForm.get('title').setValue(book.title);\n    this.booksOrgForm.get('author').setValue(book.author);\n    this.booksOrgForm.get('category').setValue(book.category);\n    this.booksOrgForm.get('blurb').setValue(book.blurb);\n    this.booksOrgForm.get('cover').setValue(book.cover);\n    \n  }\n  onFileChange(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.booksForm.get('cover').setValue(file);\n    }\n  }\n  enableAddBooks() {\n    this.enableaddBooks =true;\n  }\n  cancelAddBooks() {\n    this.enableaddBooks =false;\n    this.booksForm.get('title').setValue('');\n    this.booksForm.get('author').setValue('');\n    this.booksForm.get('category').setValue('');\n    this.booksForm.get('blurb').setValue('');\n    this.booksForm.get('cover').setValue('');\n  }\n}\n","<app-header></app-header>\n<div class=\"books__add-container\" *ngIf=\"enableaddBooks\">\n  <h2 class=\"bibliophile__heading\">Add Books</h2>\n      <div class=\"Status-message\">\n        <div *ngIf=\"error\" class=\"error\">\n          {{ error.message }}\n        </div>\n        <div *ngIf=\"uploadResponse.status === 'error'\" class=\"error occured\">\n          {{ uploadResponse.message }}\n        </div>\n        <div *ngIf=\"uploadResponse.status === 'progress'\" class=\"progress\">\n      \n      \n          <div role=\"progressbar\" [style.width.%]=\"uploadResponse.message\" aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"  class=\"progress ing\">\n            {{uploadResponse.message}}%\n          </div>\n      \n        </div>\n        </div>\n      <form (ngSubmit)=\"addBooks();booksForm.reset()\" [formGroup]=\"booksForm\"  enctype=\"multipart/form-data\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input type=\"text\" class=\"form-control\" id=\"title\" name=\"title\" formControlName=\"title\">\n          <span class=\"text-danger\"\n          *ngIf=\"(f.title.touched || submitted) && f.title.errors?.required\">\n          Title is required\n        </span>   \n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Author</label>\n          <input type=\"text\" class=\"form-control\" id=\"author\" name=\"author\"\n          formControlName=\"author\">\n          <span class=\"text-danger\"\n          *ngIf=\"(f.author.touched || submitted) && f.author.errors?.required\">\n          Author is required\n        </span> \n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Category</label>\n          <input type=\"text\" class=\"form-control\" id=\"category\" name=\"category\"\n          formControlName=\"category\">\n        </div>\n        <div class=\"form-group\">\n          <label for=\"alterEgo\">Blurb</label>\n          <textarea name=\"blurb\"  class=\"form-control\" id=\"blurb\" cols=\"30\" rows=\"10\"\n          formControlName=\"blurb\"></textarea>\n        </div>\n        \n        <div class=\"form-group\">\n          <input type=\"file\" class=\"form-control\" name=\"cover\" id=\"cover\"\n          formControlName=\"cover\" (change)=\"onFileChange($event)\" />\n          \n        </div>\n       \n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n        <button class=\"btn btn-danger book__cancel-button\" (click)=\"cancelAddBooks()\">Cancel</button>\n      </form>\n    </div> \n   <div class=\"book__container\" *ngIf=\"!enableaddBooks\">\n    <h1 class=\"book__page-title bibliophile__heading\">Books</h1>\n    <div class=\"row\"  *ngIf=\"loggedIn\">\n      <div class=\"col-12 book__add-main-button-container\">\n        <button class=\"btn btn-primary book__add-main-button\" (click)=\"enableAddBooks()\">Add new book</button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div *ngFor=\"let book of books\" class=\"col-md-3\">\n        <div class=\"card book__item\" [class.active]=\"loggedIn\">\n          <div class=\"card-body book__item-container\">\n            <a routerLink=\"/bookdetails/{{book._id}}\">\n              <div class=\"book__cover\" style=\"background-image:url({{imageUrl}}/{{book.cover}})\">\n\n              </div>\n            </a>\n            <!-- <img src=\"{{imageUrl}}/{{book.cover}}\" alt=\"\" class=\"book__cover\"> -->\n            <a class=\"card-title book__main-title\" routerLink=\"/bookdetails/{{book._id}}\">\n              {{ book.title }}\n            </a>\n            <h6 class=\"card-subtitle book__sub-title\">\n              {{book.author}}\n            </h6>\n            <div *ngIf=\"book.blurb\" class=\"card-text book__description\">\n              Summary: {{(book.blurb.length>300)? (book.blurb | slice:0:300)+'..':(book.blurb)}}\n            </div>\n            <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n              <button class=\"btn btn-primary book__update\" (click)=\"updateBook(book)\">Update Book</button>\n              <button class=\"btn btn-danger book__delete\" (click)=\"removeBook(book)\">Delete Book</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n   </div>\n","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BookComponent } from './book/book.component';\nimport { AppRoutingModule } from './../app-routing.module';\nimport { FormsModule , ReactiveFormsModule }   from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BookDetailsComponent } from './book-details/book-details.component';\nimport { UserBooksComponent } from './user-books/user-books.component';\nimport { UserBookDetailsComponent } from './user-book-details/user-book-details.component';\nimport { RatingModule } from 'ng-starrating';\n@NgModule({\n  declarations: [\n    BookComponent,\n    BookDetailsComponent,\n    UserBooksComponent,\n    UserBookDetailsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedItemsModule,\n    RatingModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class BooksManagerModule { }\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport {Router, ActivatedRoute, Params} from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { StarRatingComponent } from 'ng-starrating';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-user-book-details',\n  templateUrl: './user-book-details.component.html',\n  styleUrls: ['./user-book-details.component.scss']\n})\nexport class UserBookDetailsComponent implements OnInit {\n  bookDetail: any;\n  loggedIn : any;\n  userId : any;\n  totalstar = 5;\n  readonly imageUrl = \"http://localhost:5000/\";\n  constructor(\n    private rootService : RootService,\n    private authService : AuthService,\n    private activatedRoute: ActivatedRoute,\n    private toastr: ToastrService\n  ) {\n    this.bookDetail =  {\n      '_id' : '',\n      'title' : '',\n      'blurb' : '',\n      'author' : '',\n      'category' : '',\n      'cover' : '',\n    };\n    this.userId =\"\";\n   }\n\n  ngOnInit(): void {\n    var id;\n    this.loggedIn = this.authService.isAuthenticated();\n    this.activatedRoute.params.subscribe(params => {\n      id = params['id'];\n    });\n    this.fetchBookdetails(id); \n    if(this.loggedIn){\n      var userdet = localStorage.getItem('userInfo');\n      var data = JSON.parse(userdet);\n      this.userId= data.id;\n    }\n  }\n  fetchBookdetails(id){\n    console.log(id);\n    var booksingle = {'_id':id};\n    this.rootService.postAPIsingleBook(booksingle).subscribe((response)=>{\n      this.bookDetail = response;\n      console.log(this.bookDetail)\n    },(error) => {\n      console.log('erred')\n    });\n    // console.log(this.bookDetail);\n  }\n  onRate($event:{oldValue:number, newValue:number, starRating:StarRatingComponent}) {\n    // console.log(this.bookDetail._id);\n    // console.log(this.userId);\n    // console.log(`${$event.newValue}`);\n    var newRatingItem = {'bookid' : this.bookDetail._id, 'userid' : this.userId, 'value': $event.newValue, 'oldValue': $event.oldValue};\n    this.rootService.postRatingData(newRatingItem).subscribe((response)=>{\n      console.log(response);\n      this.toastr.success(\"Rating Succesful\");\n    },(error) => {\n        console.log('error is ', error)\n        this.toastr.error(\"Rating Failed\");\n    });\n  }\n}\n","<app-header></app-header>\n<div class=\"bookDetail row\">\n    <div class=\"col-md-3 bookDetail__left-container\">\n        <img src=\"{{imageUrl}}/{{bookDetail.cover}}\" alt=\"\" class=\"bookDetail__cover\">\n    </div>\n    <div class=\"col-md-9 bookDetail__right-container\">\n        <h1 class=\"bookDetail__heading bibliophile__heading\">\n            {{bookDetail.title}}\n        </h1>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__author\">\n                    <span class=\"bookDetail__sub\">by</span> {{bookDetail.author}}\n                </div>\n            </div>\n            <div class=\"col-6\">\n                <div class=\"bookDetail__meta bookDetail__category\">\n                    <span class=\"bookDetail__sub\">in</span> {{bookDetail.category}}\n                </div>\n            </div>\n        </div>\n        <div class=\"bookDetail__description\">\n            {{bookDetail.blurb}}\n        </div>\n        <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n            <star-rating value=\"5\" totalstars={{totalstar}} checkedcolor=\"red\" uncheckedcolor=\"gray\" size=\"24px\"\n            readonly=\"false\" (rate)=\"onRate($event)\"></star-rating>\n            <button class=\"btn btn-primary book__review\">Review</button>\n        </div>\n    </div>    \n</div>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { UploadService } from './../../services/upload.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { StarRatingComponent } from 'ng-starrating';\n\n@Component({\n  selector: 'app-user-books',\n  templateUrl: './user-books.component.html',\n  styleUrls: ['./user-books.component.scss']\n})\nexport class UserBooksComponent implements OnInit {\n  readonly imageUrl = \"http://localhost:5000/\";\n  submitted = false;\n  updating = false ;\n  enableaddBooks = false;\n  error;\n  totalstar = 5;\n  userId: number = 1;\n  uploadResponse = { status: '', message: '', filePath: '' };\n  books;\n  loggedIn;\n  booksForm : FormGroup;\n  booksOrgForm : FormGroup;\n  // newBook = new BookInventory('','','','','');\n  constructor(\n      private rootService : RootService,\n      private authService : AuthService,\n      private formBuilder: FormBuilder,\n      private uploadService : UploadService,\n      private toastr: ToastrService\n    ) {\n    \n  }\n  \n  ngOnInit(): void {\n    this.getBooks();\n    this.loggedIn = this.authService.isAuthenticated();\n  }\n  share() {\n    window.alert('Book Shared');\n  }\n  get f() { \n    return this.booksForm.controls; \n  }\n  getBooks(){\n    this.rootService.getAPIData().subscribe((response)=>{\n      console.log(response);\n      this.books = response['booklists'];\n      this.fetchAverageRating();\n      console.log(\"After Update\");\n      console.log(this.books);\n    },(error) => {\n        console.log('error is ', error)\n    });\n  }\n  revieBook(book) {\n    console.log(book);\n  }\n  fetchAverageRating(){\n    console.log('Before avergae rating'); \n    // console.log(this.books); \n    var ratingAvg;\n    for(let book of this.books){\n      console.log(book._id);\n      var bookrating = {'bookid' : book._id};\n      this.rootService.getRatingData(bookrating).subscribe((response)=>{\n        ratingAvg = response;\n        if(ratingAvg.avgRating != \"\"){\n          book.avRating = (ratingAvg.avgRating[0].pop ? ratingAvg.avgRating[0].pop : 0);\n        }\n      },(error) => {\n          console.log('error is ', error)\n      });\n    }\n  }\n  onRate($event:{oldValue:number, newValue:number, starRating:StarRatingComponent}) {\n    // this.totalstar = $event.newValue;\n    console.log('hre');\n    console.log(`Old Value:${$event.oldValue}, \n      New Value: ${$event.newValue}, \n      Checked Color: ${$event.starRating.checkedcolor}, \n      Unchecked Color: ${$event.starRating.uncheckedcolor}`);\n  }\n}\n","<app-header></app-header>\n   <div class=\"book__container\" *ngIf=\"!enableaddBooks\">\n    <h1 class=\"book__page-title bibliophile__heading\">Books</h1>\n    <div class=\"row\">\n      <div *ngFor=\"let book of books\" class=\"col-md-3\">\n        <div class=\"card book__item\" [class.active]=\"loggedIn\">\n          <div class=\"card-body book__item-container\">\n            <a routerLink=\"/bookdetails/{{book._id}}\">\n              <div class=\"book__cover\" style=\"background-image:url({{imageUrl}}/{{book.cover}})\">\n\n              </div>\n            </a>\n            <!-- <img src=\"{{imageUrl}}/{{book.cover}}\" alt=\"\" class=\"book__cover\"> -->\n            <a class=\"card-title book__main-title\" routerLink=\"/bookdetails/{{book._id}}\">\n              {{ book.title }}\n            </a>\n            <h6 class=\"card-subtitle book__sub-title\">\n              {{book.author}}\n            </h6>\n            <div *ngIf=\"book.blurb\" class=\"card-text book__description\">\n              Summary: {{(book.blurb.length>300)? (book.blurb | slice:0:300)+'..':(book.blurb)}}\n            </div>\n            <div class=\"book__button-container\"  *ngIf=\"loggedIn\">\n              <star-rating value=\"{{book.avRating}}\" totalstars={{totalstar}} checkedcolor=\"gold\" uncheckedcolor=\"gray\" size=\"24px\"\n              readonly=\"true\" (rate)=\"onRate($event)\"></star-rating>\n              <button class=\"btn btn-primary book__review\" (click)=\"revieBook(book)\">Review</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n   </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/login.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are the quietest and most constant of friends; they are the most accessible and wisest of counselors, and the most patient of teachers.”<br/>\n            <span>\n                ― Charles W. Eliot\n            </span>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-normal-user-home',\n  templateUrl: './normal-user-home.component.html',\n  styleUrls: ['./normal-user-home.component.scss']\n})\nexport class NormalUserHOmeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/home.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are letters in bottles, cast into the waves of time, from one person trying to save the world to another.”<br/>\n            <span>\n                ― Amal El-Mohtar\n            </span>\n        </p>\n    </div>\n</div>","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-normal-user-login',\n  templateUrl: './normal-user-login.component.html',\n  styleUrls: ['./normal-user-login.component.scss']\n})\nexport class NormalUserLoginComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted = false; \n  userEmail : String;\n  userPassword : String;\n\n  constructor(\n    private rootService : RootService, \n    private authService : AuthService, \n    private router : Router,\n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private toastr: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n    });\n  }\n  get f() { \n    return this.loginForm.controls; \n  }\n  login(){\n    console.log('onetwo');\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      var userval = this.loginForm.value.user;\n      var passwordval = this.loginForm.value.password;\n      var userItem = {'username': userval, 'password' : passwordval, 'type' : 'normal'  };\n      // this.rootService.postAPIData(userItem).subscribe((response)=>{\n      //   console.log(response);\n      //   this.router.navigate(['/books'])\n      // },(error) => {\n      //     console.log('error is ', error)\n      // });\n      this.authService.validate(userItem)\n      .then((response) => {\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/userHome']);\n        this.toastr.success(\"Login Succesful\");\n      },(error) => {\n        console.log('error is ', error);\n        this.toastr.error(\"Login Failed!\");\n    });\n    }\n\n\n    \n  }\n}\n","<app-header></app-header>\n<div class=\"login__container\">\n  <h1 class=\"login__heading bibliophile__heading\">Log In</h1>\n\n  <form  [formGroup]=\"loginForm\"\n  (ngSubmit)=\"login()\" class=\"login__form\">\n      <div class=\"form-group\">\n        <label for=\"user\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n          Username is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n            User Name is not available\n        </span>      \n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n          Password is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n            Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n            letter and 1 number\n        </span>      \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</div>\n\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { AuthService } from './../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-normal-user-sign-up',\n  templateUrl: './normal-user-sign-up.component.html',\n  styleUrls: ['./normal-user-sign-up.component.scss']\n})\nexport class NormalUserSignUpComponent implements OnInit {\n  userForm : FormGroup;\n  submitted = false;  \n  constructor(\n    private authService : AuthService, \n    private rootService : RootService, \n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private router : Router,\n    private toastr: ToastrService\n  ) {\n    \n   }\n  ngOnInit(): void {  \n    this.userForm = this.formBuilder.group({\n      fname : ['',Validators.required],\n      lname : ['',Validators.required],\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      cpassword : ['', [Validators.required]],\n    },\n    {\n      validator: this.customValidator.MatchPassword('password', 'cpassword'),\n    });\n  }\n  get f() { \n    return this.userForm.controls; \n  }\n\n  \n  addUsers() {\n    this.submitted = true;\n    if (this.userForm.valid) {\n      var fnameval = this.userForm.value.fname;\n      var lnameval = this.userForm.value.lname;\n      var userval = this.userForm.value.user;\n      var passwordval = this.userForm.value.password;\n      var newUserItem = {'fname' : fnameval, 'lname' : lnameval, 'user': userval, 'password' : passwordval, 'type' : 'normal' };\n      this.rootService.postAPIData(newUserItem,\"users\").subscribe((response)=>{\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/userHome']);\n        this.toastr.success(\"Sign Up Succesful\");\n      },(error) => {\n          console.log('error is ', error)\n          this.toastr.error(\"Sign Up Failed\");\n      });\n    }\n    \n  }\n}\n","<app-header></app-header>\n<h1 class=\"bibliophile__heading\">Sign Up</h1>\n\n<form  [formGroup]=\"userForm\"\n(ngSubmit)=\"addUsers()\" class=\"signup__form\">\n    \n    <div class=\"form-group\">\n      <label for=\"fname\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\"\n       formControlName=\"fname\"  \n       [ngClass]=\"{ 'is-invalid': submitted && f.fname.errors }\" > \n      <span class=\"text-danger\"\n        *ngIf=\"(f.fname.touched || submitted) && f.fname.errors?.required\">\n        First Name is required\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"lname\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\" name=\"lname\" \n      required>\n      <span class=\"text-danger\"\n        *ngIf=\"(f.lname.touched || submitted) && f.lname.errors?.required\">\n        Last Name is required\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"user\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n        Username is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n          User Name is not available\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n        Password is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n          Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n          letter and 1 number\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"cpassword\">Confirm Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"cpassword\" formControlName=\"cpassword\" \n      name=\"cpassword\"  required> \n      <span class=\"text-danger\"\n        *ngIf=\"(f.cpassword.touched || submitted) && f.cpassword.errors?.required\">\n        Confirm Password is required\n      </span> \n      <span class=\"text-danger\"\n        *ngIf=\"f.cpassword.touched && f.cpassword.errors?.passwordMismatch\">\n        Passwords doesnot match\n    </span>      \n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n  </form>","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule  }   from '@angular/forms';\nimport { NormalUserLoginComponent } from './normal-user-login/normal-user-login.component';\nimport { NormalUserSignUpComponent } from './normal-user-sign-up/normal-user-sign-up.component';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NormalUserHOmeComponent } from './normal-user-home/normal-user-home.component';\n\n\n@NgModule({\n  declarations: [\n    NormalUserLoginComponent, \n    NormalUserSignUpComponent, NormalUserHOmeComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedItemsModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class NormalUserModule { }\n","import { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\nimport { CanActivate,Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(private authService : AuthService, private route : Router) { }\n\n  canActivate(){\n    if(this.authService.isAuthenticated()){\n      return true;\n    }\n    this.route.navigate(['login']);\n    return false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http : HttpClient) { }\n\n  public isAuthenticated() : Boolean {\n    let userData = localStorage.getItem('userInfo')\n    if(userData && JSON.parse(userData)){\n      return true;\n    }\n    return false;\n  }\n\n  public setUserInfo(user){\n    localStorage.setItem('userInfo', JSON.stringify(user));\n  }\n\n  public validate(userItem) {\n    return this.http.post('book-manager001/authenticate', userItem).toPromise()\n  }\n  // public logout() {\n  //   console.log(\"out\");\n  //   let userData = localStorage.getItem('userInfo');\n  //   console.log(userData);\n  //   return this.http.get('http://localhost:3000/v1/logout').toPromise()\n  // }\n}","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomvalidationService {\n\n  patternValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const regex = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$');\n      const valid = regex.test(control.value);\n      return valid ? null : { invalidPassword: true };\n    };\n  }\n\n  MatchPassword(password: string, confirmPassword: string) {\n    return (formGroup: FormGroup) => {\n      const passwordControl = formGroup.controls[password];\n      const confirmPasswordControl = formGroup.controls[confirmPassword];\n\n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n\n      if (confirmPasswordControl.errors && !confirmPasswordControl.errors.passwordMismatch) {\n        return null;\n      }\n\n      if (passwordControl.value !== confirmPasswordControl.value) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n      } else {\n        confirmPasswordControl.setErrors(null);\n      }\n    }\n  }\n\n  userNameValidator(userControl: AbstractControl) {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        if (this.validateUserName(userControl.value)) {\n          resolve({ userNameNotAvailable: true });\n        } else {\n          resolve(null);\n        }\n      }, 1000);\n    });\n  }\n\n  validateUserName(userName: string) {\n    const UserList = ['user', 'superuser'];\n    return (UserList.indexOf(userName) > -1);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootService {\n\n  constructor(private http: HttpClient) { }\n  getAPIData(){\n    return this.http.get('http://localhost:3000/v1/books/');\n  }\n  postAPIData(newItem,type=\"books\"){\n    if(type==\"books\"){\n      return this.http.post('http://localhost:3000/v1/books/', newItem);\n    }\n    else if(type==\"users\"){\n      return this.http.post('http://localhost:3000/v1/users/', newItem);\n    }\n  }\n  postAPIUpdateData(updateItem,originalItem){\n    console.log(\"originalItem\");\n    console.log(originalItem);\n    var query = {\n      'updated' : updateItem,\n      'original' : originalItem,\n    }\n    return this.http.post('book-manager001/updateBooks/', query);\n  }\n  removeAPIData(book){\n    return this.http.post('book-manager001/removeBooks/', book);\n  }\n  // userLogin(userItem){\n  //   return this.http.post('http://localhost:3000/v1/users/', userItem);\n\n  // }\n  postAPIsingleBook(singleBook){\n    return this.http.post('book-manager001/bookOne/', singleBook);\n  }\n\n  postRatingData(newRatingItem){\n    return this.http.post('book-manager001/rate/', newRatingItem);\n  }\n  getRatingData(book){\n    return this.http.post('book-manager001/listrate/', book);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n  \n  SERVER_URL: string = \"http://localhost:8080\";\n  constructor(private httpClient: HttpClient) { }\n\n  public upload(data) {\n    //let uploadURL = `${this.SERVER_URL}/api/upload`;\n    let uploadURL = 'book-manager001/upload/';\n    console.log('Meow');\n    console.log(data);  \n    return this.httpClient.post<any>(uploadURL, data, {\n      reportProgress: true,\n      observe: 'events'\n    }).pipe(map((event) => {\n\n      switch (event.type) {\n\n        case HttpEventType.UploadProgress:\n          const progress = Math.round(100 * event.loaded / event.total);\n          return { status: 'progress', message: progress };\n\n        case HttpEventType.Response:\n          return event.body;\n        default:\n          return `Unhandled event: ${event.type}`;\n      }\n    })\n    );\n  }\n}\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  loggedIn : any;\n  userData : any;\n  constructor(\n    private authService : AuthService,\n  ) { \n      this.userData =\"\";\n  }\n\n  ngOnInit(): void {\n    this.loggedIn = this.authService.isAuthenticated()\n    if(this.loggedIn){\n      var userdet = localStorage.getItem('userInfo');\n      var data = JSON.parse(userdet);\n      this.userData= data.user\n      // console.log(data.user);\n    }\n  }\n\n}\n","<nav class=\"navigation navigation--main\">\n    <a routerLink=\"/home\"><img src=\"assets/img/logo.png\"></a>\n    <ul class=\"navigation__container\">\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/home\" routerLinkActive=\"active\" class=\"navigation__link\">Home</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a routerLink=\"/userHome\" routerLinkActive=\"active\" class=\"navigation__link\">Home</a></li>\n      <li  class=\"navigation__item\"><a routerLink=\"/books\" routerLinkActive=\"active\" class=\"navigation__link\">Books</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/login\" routerLinkActive=\"active\" class=\"navigation__link\">Login</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"!loggedIn\"><a routerLink=\"/signup\" routerLinkActive=\"active\" class=\"navigation__link\">Sign Up</a></li>\n      <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a class=\"navigation__link\">{{userData}}</a>\n        <ul class=\"navigation__sub-menu\">\n            <li  class=\"navigation__item\" *ngIf=\"loggedIn\"><a routerLink=\"/logout\" routerLinkActive=\"active\" class=\"navigation__link\">Log Out</a></li>\n        </ul>\n      </li>\n    </ul>\n  </nav>\n  <div class=\"clear\"></div>","import { AppRoutingModule } from './../app-routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule\n  ],\n  exports: [HeaderComponent], \n})\nexport class SharedItemsModule { }\n","import { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RootService } from '../../services/root.service';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm : FormGroup;\n  submitted = false; \n  userEmail : String;\n  userPassword : String;\n\n  constructor(\n    private rootService : RootService, \n    private authService : AuthService, \n    private router : Router,\n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private toastr: ToastrService\n    ) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n    });\n  }\n  get f() { \n    return this.loginForm.controls; \n  }\n  login(){\n    console.log('onetwo');\n    this.submitted = true;\n    if (this.loginForm.valid) {\n      var userval = this.loginForm.value.user;\n      var passwordval = this.loginForm.value.password;\n      var userItem = {'username': userval, 'password' : passwordval, 'type' : 'admin' };\n      // this.rootService.postAPIData(userItem).subscribe((response)=>{\n      //   console.log(response);\n      //   this.router.navigate(['/books'])\n      // },(error) => {\n      //     console.log('error is ', error)\n      // });\n      this.authService.validate(userItem)\n      .then((response) => {\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/adminHome']);\n        this.toastr.success(\"Login Succesful\");\n      },(error) => {\n        console.log('error is ', error);\n        this.toastr.error(\"Login Failed!\");\n    });\n    }\n\n\n    \n  }\n}\n","<app-header></app-header>\n<div class=\"login__container\">\n  <h1 class=\"login__heading bibliophile__heading\">Log In</h1>\n\n  <form  [formGroup]=\"loginForm\"\n  (ngSubmit)=\"login()\" class=\"login__form\">\n      <div class=\"form-group\">\n        <label for=\"user\">Username</label>\n        <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n          Username is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n            User Name is not available\n        </span>      \n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n        required >\n        <span class=\"text-danger\"\n          *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n          Password is required\n        </span>\n        <span class=\"text-danger\"\n            *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n            Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n            letter and 1 number\n        </span>      \n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(\n    private authService : AuthService, \n    private router : Router,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    localStorage.removeItem('userInfo');\n    this.router.navigate(['/home']); \n    this.toastr.success(\"Logged out Succesfully\");\n  }\n\n}\n","<p>Logged out Succesfully!</p>\n","import { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { RootService } from '../../services/root.service';\nimport { CustomvalidationService } from './../../services/customvalidation.service';\nimport { AuthService } from './../../services/auth.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n  userForm : FormGroup;\n  submitted = false;  \n  constructor(\n    private authService : AuthService, \n    private rootService : RootService, \n    private formBuilder: FormBuilder,\n    private customValidator: CustomvalidationService,\n    private router : Router,\n    private toastr: ToastrService\n  ) {\n    \n   }\n  ngOnInit(): void {  \n    this.userForm = this.formBuilder.group({\n      fname : ['',Validators.required],\n      lname : ['',Validators.required],\n      user : ['',[Validators.required], this.customValidator.userNameValidator.bind(this.customValidator)],\n      password : ['', Validators.compose([Validators.required, this.customValidator.patternValidator()])],\n      cpassword : ['', [Validators.required]],\n    },\n    {\n      validator: this.customValidator.MatchPassword('password', 'cpassword'),\n    });\n  }\n  get f() { \n    return this.userForm.controls; \n  }\n\n  \n  addUsers() {\n    this.submitted = true;\n    if (this.userForm.valid) {\n      var fnameval = this.userForm.value.fname;\n      var lnameval = this.userForm.value.lname;\n      var userval = this.userForm.value.user;\n      var passwordval = this.userForm.value.password;\n      var newUserItem = {'fname' : fnameval, 'lname' : lnameval, 'user': userval, 'password' : passwordval, 'type' : 'admin' };\n      this.rootService.postAPIData(newUserItem,\"users\").subscribe((response)=>{\n        console.log(response);\n        this.authService.setUserInfo({'user' : response['user'], 'id' : response['id']});\n        this.router.navigate(['/adminHome']);\n        this.toastr.success(\"Sign Up Succesful\");\n      },(error) => {\n          console.log('error is ', error)\n          this.toastr.error(\"Sign Up Failed\");\n      });\n    }\n    \n  }\n  \n   \n}\n","<app-header></app-header>\n<h1 class=\"bibliophile__heading\">Sign Up</h1>\n\n<form  [formGroup]=\"userForm\"\n(ngSubmit)=\"addUsers()\" class=\"signup__form\">\n    \n    <div class=\"form-group\">\n      <label for=\"fname\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"fname\" name=\"fname\"\n       formControlName=\"fname\"  \n       [ngClass]=\"{ 'is-invalid': submitted && f.fname.errors }\" > \n      <span class=\"text-danger\"\n        *ngIf=\"(f.fname.touched || submitted) && f.fname.errors?.required\">\n        First Name is required\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"lname\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"lname\" formControlName=\"lname\" name=\"lname\" \n      required>\n      <span class=\"text-danger\"\n        *ngIf=\"(f.lname.touched || submitted) && f.lname.errors?.required\">\n        Last Name is required\n      </span>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"user\">Username</label>\n      <input type=\"text\" class=\"form-control\" id=\"user\" formControlName=\"user\" name=\"user\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.user.touched || submitted) && f.user.errors?.required\">\n        Username is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.user.touched && f.user.errors?.userNameNotAvailable\">\n          User Name is not available\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" name=\"password\" \n      required >\n      <span class=\"text-danger\"\n        *ngIf=\"(f.password.touched || submitted) && f.password.errors?.required\">\n        Password is required\n      </span>\n      <span class=\"text-danger\"\n          *ngIf=\"f.password.touched && f.password.errors?.invalidPassword\">\n          Password should have minimum 8 characters, at least 1 uppercase letter, 1 lowercase\n          letter and 1 number\n      </span>      \n    </div>\n    <div class=\"form-group\">\n      <label for=\"cpassword\">Confirm Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"cpassword\" formControlName=\"cpassword\" \n      name=\"cpassword\"  required> \n      <span class=\"text-danger\"\n        *ngIf=\"(f.cpassword.touched || submitted) && f.cpassword.errors?.required\">\n        Confirm Password is required\n      </span> \n      <span class=\"text-danger\"\n        *ngIf=\"f.cpassword.touched && f.cpassword.errors?.passwordMismatch\">\n        Passwords doesnot match\n    </span>      \n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n\n  </form>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-home',\n  templateUrl: './user-home.component.html',\n  styleUrls: ['./user-home.component.scss']\n})\nexport class UserHomeComponent implements OnInit {\n  user : string;\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","<app-header></app-header>\n<div class=\"row home__container\">\n    <div class=\"col-md-8 home__left\">\n        <img src=\"assets/img/home.jpg\" class=\"home__image\" alt=\"Home\">\n    </div>\n    <div class=\"col-md-4 home__right\">\n        <p>\n            “Books are letters in bottles, cast into the waves of time, from one person trying to save the world to another.”<br/>\n            <span>\n                ― Amal El-Mohtar\n            </span>\n        </p>\n    </div>\n</div>","import { SharedItemsModule } from './../shared-items/shared-items.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule  }   from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { UserHomeComponent } from './user-home/user-home.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { ToastrModule } from 'ngx-toastr';\n@NgModule({\n  declarations: [\n    LoginComponent,\n    SignUpComponent,\n    UserHomeComponent,\n    LogoutComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedItemsModule,\n    ToastrModule.forRoot() \n  ]\n})\nexport class UsersManagerModule {\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}